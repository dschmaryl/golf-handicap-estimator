{"version":3,"sources":["reducer.ts","store.ts","components/Header.tsx","components/Handicap.tsx","containers/Handicap.ts","components/RoundAdd.tsx","containers/RoundAdd.ts","actions.ts","components/RoundList.tsx","containers/RoundList.ts","components/Footer.tsx","index.tsx","App.tsx"],"names":["calcHandicap","rounds","numOfDiffs","Math","max","floor","length","diffsSum","map","s","score","rating","slope","sort","a","b","slice","reduce","parseInt","String","min","store","createStore","state","arguments","undefined","handicap","action","type","concat","Object","toConsumableArray","objectSpread","round","index","Head","styled","header","_templateObject","Anchor","_templateObject2","Header","react_default","createElement","href","Div","div","Handicap_templateObject","Handi","span","Handicap_templateObject2","connect","anyRounds","_ref","replace","Label","label","RoundAdd_templateObject","Input","input","RoundAdd_templateObject2","Button","button","_templateObject3","RoundAdd","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleChange","event","_event$target","target","value","name","setState","defineProperty","handleKeyDown","keyCode","addRound","asNumString","numString","isNaN","parseFloat","props","renderInput","placeholder","toLowerCase","onKeyDown","onChange","render","onClick","inherits","React","Component","dispatch","RoundList_templateObject","Th","th","RoundList_templateObject2","Td","td","RoundList_templateObject3","_templateObject4","removeRound","RoundList_Div","key","RoundList_Button","reverse","Foot","footer","Footer_templateObject","Footer_templateObject2","Footer","Footer_Anchor","ReactDOM","es","react","Header_Header","containers_Handicap","containers_RoundAdd","containers_RoundList","Footer_Footer","document","getElementById"],"mappings":"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","file":"static/js/main.357e2b86.chunk.js","sourcesContent":["import { Reducer } from 'redux';\nimport { Rounds, State } from './types';\n\nconst calcHandicap = (rounds: Rounds) => {\n  const numOfDiffs: number = Math.max(1, Math.floor(rounds.length / 2));\n  const diffsSum: number = rounds\n    .map(s => ((s.score - s.rating) * 113) / s.slope)\n    .sort((a, b) => a - b)\n    .slice(0, numOfDiffs)\n    .reduce((a, b) => a + b);\n  return (\n    parseInt(\n      String(Math.max(-5, Math.min((diffsSum / numOfDiffs) * 0.96, 50)) * 10),\n      10\n    ) / 10\n  );\n};\n\nexport const reducer: Reducer = (\n  state: State = { rounds: [], handicap: 50 },\n  action\n) => {\n  switch (action.type) {\n    case 'ADD_ROUND': {\n      const rounds: Rounds = [...state.rounds.slice(-19), { ...action.round }];\n      return { rounds, handicap: calcHandicap(rounds) };\n    }\n\n    case 'REMOVE_ROUND': {\n      const rounds: Rounds = [\n        ...state.rounds.slice(0, action.index),\n        ...state.rounds.slice(action.index + 1)\n      ];\n\n      return {\n        rounds,\n        handicap: rounds.length > 0 ? calcHandicap(rounds) : 50\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Head = styled.header`\n  padding-top: 4px;\n  padding-bottom: 6px;\n`;\n\nconst Anchor = styled.a`\n  text-decoration: none;\n  color: #999;\n  :hover {\n    color: #555;\n  }\n`;\n\nexport const Header: React.FC = () => (\n  <Head>\n    <h1>Golf Handicap Estimator</h1>\n    <p>\n      This can give you a rough estimate of your handicap using only the total\n      scores. The official algorithm as specified by the USGA is a little more\n      complicated since it involves adjusting scores based on the player's\n      current handicap, but this can give you an idea of what your handicap\n      would be.\n    </p>\n    <p>\n      The course rating and slope are usually listed on the scorecard from that\n      course, or you can look them up at the{' '}\n      <Anchor href=\"https://ncrdb.usga.org\">\n        National Course Rating Database\n      </Anchor>\n      . Using the correct rating and slope is important for the handicap to be\n      accurate, but the average rating (72) and slope (113) could be used.\n    </p>\n  </Head>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  padding: 10px 0 30px 0;\n  font-size: 18px;\n`;\n\nconst Handi = styled.span`\n  font-weight: bold;\n`;\n\ninterface PropTypes {\n  anyRounds: boolean;\n  handicap: number;\n}\n\nexport const Handicap: React.FC<PropTypes> = ({ anyRounds, handicap }) =>\n  !anyRounds ? (\n    <Div>Enter at least one score and as many as 20.</Div>\n  ) : (\n    <Div>\n      <span>\n        {'Your handicap is approximately: '}\n        <Handi>{('' + handicap).replace('-', '+')}</Handi>\n      </span>\n    </Div>\n  );\n","import { connect } from 'react-redux';\n\nimport { State } from '../types';\nimport { Handicap } from '../components/Handicap';\n\nconst mapStateToProps = (state: State) => ({\n  anyRounds: state.rounds.length > 0,\n  handicap: state.handicap\n});\n\nexport default connect(mapStateToProps)(Handicap);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Round } from '../types';\n\nconst Label = styled.label`\n  font-weight: bold;\n  padding-left: 4px;\n`;\n\nconst Input = styled.input`\n  text-align: right;\n  padding: 2px 4px 2px 0;\n  margin: 0 10px 0 6px;\n  width: 36px;\n`;\n\nconst Button = styled.button`\n  color: #555;\n  font-weight: bold;\n  margin-left: 10px;\n  width: 50px;\n`;\n\ninterface PropTypes {\n  addRound: Function;\n}\n\nexport class RoundAdd extends React.Component<PropTypes> {\n  state = { score: '', rating: '', slope: '' };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { value, name }\n    } = event;\n    this.setState({ [name]: value });\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) this.addRound();\n  };\n\n  addRound = () => {\n    const asNumString: Function = (numString: string) =>\n      isNaN(parseFloat(numString)) ? '' : numString;\n\n    const score: number = parseInt(asNumString(this.state.score), 10);\n    const rating: number = this.state.rating\n      ? parseFloat(asNumString(this.state.rating))\n      : 72;\n    const slope = this.state.slope\n      ? parseInt(asNumString(this.state.slope), 10)\n      : 113;\n\n    if (50 <= score && score <= 200) {\n      this.setState({ score: '' });\n      const round: Round = { score, rating, slope };\n      this.props.addRound(round);\n    }\n  };\n\n  renderInput = (label: string, value: string, placeholder: string) => (\n    <span>\n      <Label>{label}:</Label>\n      <Input\n        type=\"number\"\n        name={label.toLowerCase()}\n        value={value}\n        placeholder={placeholder}\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n      />\n    </span>\n  );\n\n  render = () => (\n    <div>\n      {this.renderInput('Score', this.state.score, '')}\n      {this.renderInput('Rating', this.state.rating, '72')}\n      {this.renderInput('Slope', this.state.slope, '113')}\n      <Button onClick={this.addRound}>Add</Button>\n    </div>\n  );\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { addRound } from '../actions';\nimport { Round } from '../types';\nimport { RoundAdd } from '../components/RoundAdd';\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addRound: (round: Round) => dispatch(addRound(round))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(RoundAdd);\n","import { Round } from './types';\n\nexport const addRound = (round: Round) => ({\n  type: 'ADD_ROUND',\n  round\n});\n\nexport const removeRound = (index: number) => ({ type: 'REMOVE_ROUND', index });\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Round, Rounds } from '../types';\n\nconst Div = styled.div`\n  padding-top: 30px;\n`;\n\nconst Th = styled.th`\n  text-align: center;\n  width: 72px;\n`;\n\nconst Td = styled.td`\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  color: #555;\n  font-weight: bold;\n  display: block;\n  margin: auto;\n`;\n\ninterface PropTypes {\n  rounds: Rounds;\n  removeRound: Function;\n}\n\nexport const RoundList: React.FC<PropTypes> = ({ rounds, removeRound }) =>\n  rounds.length === 0 ? (\n    <Div>no scores entered yet</Div>\n  ) : (\n    <Div>\n      <table>\n        <thead>\n          <tr>\n            <Th>Round</Th>\n            <Th>Score</Th>\n            <Th>Rating</Th>\n            <Th>Slope</Th>\n            <Th>Delete</Th>\n          </tr>\n        </thead>\n        <tbody>\n          {rounds\n            .map((round: Round, index: number) => (\n              <tr key={index}>\n                <Td>{index + 1}</Td>\n                <Td>{round.score}</Td>\n                <Td>{round.rating}</Td>\n                <Td>{round.slope}</Td>\n                <Td>\n                  <Button onClick={() => removeRound(index)}>X</Button>\n                </Td>\n              </tr>\n            ))\n            .reverse()}\n        </tbody>\n      </table>\n    </Div>\n  );\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { State } from '../types';\nimport { removeRound } from '../actions';\nimport { RoundList } from '../components/RoundList';\n\nconst mapStateToProps = (state: State) => ({ rounds: state.rounds });\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  removeRound: (index: number) => dispatch(removeRound(index))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoundList);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Foot = styled.footer`\n  padding-top: 40px;\n`;\n\nconst Anchor = styled.a`\n  text-decoration: none;\n  color: #bbb;\n  :hover {\n    color: #555;\n  }\n`;\n\nexport const Footer: React.FC = () => (\n  <Foot>\n    <Anchor href=\"https://github.com/dschmaryl/golf-handicap-estimator\">\n      Click here to see it on GitHub.\n    </Anchor>\n  </Foot>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import React, { Fragment } from 'react';\n\nimport { Header } from './components/Header';\nimport Handicap from './containers/Handicap';\nimport RoundAdd from './containers/RoundAdd';\nimport RoundList from './containers/RoundList';\nimport { Footer } from './components/Footer';\n\nexport const App: React.FC = () => (\n  <Fragment>\n    <Header />\n    <Handicap />\n    <RoundAdd />\n    <RoundList />\n    <Footer />\n  </Fragment>\n);\n"],"sourceRoot":""}